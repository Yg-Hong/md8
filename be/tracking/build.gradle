plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.wp'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

// Spring Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

// Json
	implementation group: 'org.json', name: 'json', version: '20231013'

// Swagger
	// implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'

// Feign
	implementation platform("org.springframework.cloud:spring-cloud-dependencies:2021.0.5")
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

// Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

